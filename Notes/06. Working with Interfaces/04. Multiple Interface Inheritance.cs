// INTERFACE HEIRARCHY// MULTIPLE INHERITANCEusing System;namespace Experiment {    public interface IDrawable {        void Draw();    }    public interface IPrintable {        void Draw();        void Print();    }    public interface IShape : IDrawable, IPrintable {        int GetNumberOfSides();    }    class Triangle : IShape {        public void Print() {            Console.WriteLine("Printing Triangle..");        }        public int GetNumberOfSides() {            return 3;        }        // IMPLICIT AND EXPLICIT IMPLEMENTATION BOTH WILL WORK        void IDrawable.Draw() {            Console.WriteLine("Drawing Using IDrawable.Draw()...");        }        void IPrintable.Draw() {            Console.WriteLine("Drawing Using IPrintable.Draw()...");        }            }    class Program {        static void Main(string[] args) {            Triangle t = new Triangle();            Console.WriteLine(t.GetNumberOfSides());            t.Print();            IDrawable id = (IDrawable)t;            id.Draw();            IPrintable ip = (IPrintable)t;            ip.Draw();            Console.ReadKey();        }    }} 